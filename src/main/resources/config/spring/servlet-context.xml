<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!--  김석현 Start -->
	<!--  Default ViewResolver ===> RequestToViewNameResolver : Return Type 을 void, ReqeustMapping URL 을 따라간다. -->
	
	<!-- beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
		  <beans:list>
			<beans:bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
		  </beans:list>
		</beans:property>
	</beans:bean-->

 	<beans:bean id="contentNegotiationManager"  class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <beans:property name="favorPathExtension" value="true" />
        <beans:property name="ignoreAcceptHeader" value="true"/>
        <beans:property name="useJaf" value="false"/>
        <beans:property name="defaultContentType" value="text/html" />

        <beans:property name="mediaTypes">
            <beans:map>
               <beans:entry key="html" value="text/html"/>
               <beans:entry key="json" value="application/json"/>
           </beans:map>
        </beans:property>
    </beans:bean>
    	 
	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="contentNegotiationManager" ref="contentNegotiationManager"/>
		<beans:property name="viewResolvers">
			<beans:list>
				<beans:bean id="bundleResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
	  				<beans:property name="basename" value="views"/>
			  	</beans:bean>
				<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
				<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<beans:property name="prefix" value="/WEB-INF/views/"/>
					<beans:property name="suffix" value=".jsp"/>
				</beans:bean>
			</beans:list>
		</beans:property>
	
		<!-- 위의 viewResolvers 에 의해 view를 얻지 못했을 경우에 사용되는 view -->
		<!-- beans:property name="defaultViews">
			<beans:list>
			  <beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
			</beans:list>
		</beans:property-->	
		<!-- beans:property name="defaultContentType" value="application/json" /-->
	</beans:bean>

	<beans:bean id="download" class="com.myhome.comm.DownloadView"></beans:bean>

	<context:component-scan base-package="com.myhome" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	<!--  김석현 End -->	
	
</beans:beans>
